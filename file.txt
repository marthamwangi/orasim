//no...halt registration
if (results.length == 0) {
  console.log("------> Not registered as a Realtor");

  await errors.push("You should register with EARB");

} else {
  //yes..Proceed to register user
  await connection.query('SELECT * FROM realtor WHERE agentEmail = ' + connection.escape(newRealtor.agentEmail), async function (error, results, fields) {
    if (err) {
      console.log("error: ", err);
      result(err, null);
      return;
    } else {
      console.log("------> Search Results");
      console.log(results.length);
      if (results.length != 0) {
        console.log('"-------> User already exists');
        await errors.push("A user with that email alredy exists! Try to login");
        console.log(errors);
        result(newRealtor, null)
      } else {
        await connection.query('INSERT INTO realtor SET ?', newRealtor, function (error, results, fields) {
          try {
            console.log("--------> Created new Realtor");
            console.log(results);
            result(null, newRealtor)

          } catch (error) {
            throw error
          }
          result(null, {
            id: results.insertId,
            ...newRealtor
          });

        });
      }
    }
  });
}
Realtor.login = (findRealtor, result) => {
  dbConnect.getConnection(async function (err, connection) {
    if (err) {
      throw err
    }
    await connection.query('SELECT FROM realtor WHERE agentNationalId = ' + connection.escape(findRealtor.agentNationalId), async function (error, results, fields) {
      connection.release();
      if (err) {
        console.log('error: ', err);
        result(err, null);
      }
      if (result.length == 0) {
        console.log('--------->User does not exist');
        result.sendStatus(404);
      } else {
        const hashedPassword = result.password;
        //get hashedPassword from result
        await bcrypt.compare(findRealtor.agentPassword, hashedPassword, (err, isValid) => {
          if (err) {
            // handle error
          }
          console.log("--------> Valid Password");
          result(null, {
            ...findRealtor
          });

        })

      }
    })
  });
}
console.log('SELECT * FROM user WHERE username = ' + connection.escape(username) + ' AND password = ' + connection.escape(password));


await connection.query('SELECT * FROM realtor WHERE agentEmail = ' + connection.escape(realtor.agentEmail), async function (error, results, fields) {
  if (error) { throw error; }
  if (results.length !== 0) {
    return res.render('realtor-register', {
      error: 'This email already in use.',
    });

  } else {
    await connection.query('INSERT INTO realtor SET ?', realtor, function (error, results, fields) {
      if (error) { throw error; }
      if (results.affectedRows === 0) {
        console.log(results);
        return res.render('realtor-register', {
          error: 'Your registration has failed.'
        });
      }

    });
  }

  res.render("realtor-register", {
    msg: 'You have successfully registered.'
  });
});

  });

const realtorEarb = {
  agentName: results.realtorName,
  agentEmail: req.body.email,
  agentPassword: password,
  agentLicence: results.realtorLicence,
  agentContact: req.body.contact,
  agentNationalId: results.realtorNationalId,
};
await connection.query('INSERT INTO realtor SET ?', realtorEarb, function (error, results, fields) {
  if (error) { throw error; }
  if (results.affectedRows === 0) {
    console.log(results);
    return res.render('realtor-register', {
      error: 'Your registration has failed.'
    });
  }

});

      <% if (typeof languages != 'undefined') {%>
                          <% for (var i = 0; i < languages.length; i++) { %>
                            <option>
                              <%= languages[i] %>
                            </option>
                            <% } %>
                              <%}%>


               < !-- < div class="col-md-12 mt-4" >
                      <label class="labels">Select Language</label>
                      <select class="form-select" aria-label="Default select example" multiple>
                        <% if (typeof languages !='undefined' ) {%>
                          <% for(var i=0; i < languages.length; i++) { %>
                            <option>
                              <%= languages[i].languages%>
                            </option>
                            <% } %>
                              <%}%>
                      </select>
                    </div > -->
{
  fieldname: 'profile',
  originalname: '2044541.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: 'C:\\Users\\Martha\\Desktop\\Orasim\\public\\uploads\\profiles',
  filename: 'profile-1645100551916.jpeg',
  path: 'C:\\Users\\Martha\\Desktop\\Orasim\\public\\uploads\\profiles\\profile-1645100551916.jpeg',
  size: 348131
}

      <section>
        <div class="container">

          <a class="card2" href="#">
            <img class="card-img-top" src="/img/people_search.svg" alt="people_search">

            <h3>Browse Realtors</h3>
            <p class="small" style="  line-height: 1.6;">
              PORES REALTY® is dedicated to supporting its clients. Real estate agents represent
              buyers and sellers throughout Kenya.</p>

            <div class="go-corner" href="#">
              <div class="go-arrow">
                →
              </div>
            </div>
          </a>
          <a class="card2" href="#">
            <img class="card-img-top" src="/img/house_search.svg" alt="house_search">

            <h3>Search Properties</h3>
            <p class="small" style="  line-height: 1.6;">
              Card description with lots of great facts and interesting details.</p>

            <div class="go-corner" href="#">
              <div class="go-arrow">
                →
              </div>
            </div>
          </a>
        </div>
      </section>
              <h1 class="display-4 fw-bold lh-1 mb-3">Secure Realty relies on Professional Realtors</h1>
              <blockquote class="blockquote">
                <p class="mb-0 lh-base">Our range of real estate professionals and estate agents offer both
                  long term and long term experience to support your real estate investment or loan plans.

                </p>
const mysql = require('mysql');
require("dotenv").config()

const DB_HOST = process.env.DB_HOST
const DB_USER = process.env.DB_USER
const DB_PASSWORD = process.env.DB_PASSWORD
const DB_DATABASE = process.env.DB_DATABASE
const DB_PORT = process.env.DB_PORT

const dbconnect = mysql.createPool({
  connectionLimit: 100,
  host: DB_HOST,
  user: DB_USER,
  password: DB_PASSWORD,
  database: DB_DATABASE,
  port: DB_PORT,
  multipleStatements: true
});

module.exports = dbconnect;
